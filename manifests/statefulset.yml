apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: k8straining
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: "azure-vote-back"
  replicas: 2 
  template:
    metadata:
      labels:
        app: redis
      annotations:
    spec:
      initContainers:
      - name: init-redis
        image: redis:4.0.9
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ `hostname` =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          # Copy appropriate config files to emptyDir.
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config/master.conf /etc/redis.conf
          else
            cp /mnt/config/slave.conf /etc/redis.conf
          fi
        volumeMounts:
        - name: redis
          mountPath: /etc
          subPath: redis.conf
        - name: cm
          mountPath: /mnt/config
      containers:
      - name: redis
        image: redis:4.0.9
        command: ["redis-server"]
        args: ["/etc/redis.conf"]
        env:
        - name: REDIS_PWD
          valueFrom:
            secretKeyRef:
              name: redis
              key: password
        ports:
        - name: redis
          containerPort: 6379
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -a $REDIS_PWD -h localhost ping"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -a $REDIS_PWD -h localhost ping"
          initialDelaySeconds: 15
          periodSeconds: 15       
        volumeMounts:
        - name: redis
          mountPath: /data
          subPath: data
        - name: redis
          mountPath: /etc/
          subPath: redis.conf
      volumes:
      - name: redis
        emptyDir: {}
      - name: cm
        configMap:
          name: redis